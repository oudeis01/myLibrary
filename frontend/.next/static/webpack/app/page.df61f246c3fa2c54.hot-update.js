"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/lib/api.ts":
/*!************************!*\
  !*** ./src/lib/api.ts ***!
  \************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   authApi: () => (/* binding */ authApi),\n/* harmony export */   bookApi: () => (/* binding */ bookApi),\n/* harmony export */   getSessionToken: () => (/* binding */ getSessionToken),\n/* harmony export */   healthApi: () => (/* binding */ healthApi),\n/* harmony export */   progressApi: () => (/* binding */ progressApi),\n/* harmony export */   removeSessionToken: () => (/* binding */ removeSessionToken),\n/* harmony export */   setSessionToken: () => (/* binding */ setSessionToken)\n/* harmony export */ });\n/**\n * @file lib/api.ts\n * @brief API communication utilities for MyLibrary frontend\n * @author MyLibrary Team\n * @version 0.1.0\n * @date 2025-08-26\n */ const API_BASE = 'http://localhost:8080/api';\n/**\n * Get session token from localStorage\n */ function getSessionToken() {\n    if (false) {}\n    const token = localStorage.getItem('sessionToken');\n    console.log('🔑 getSessionToken:', token ? \"\".concat(token.substring(0, 10), \"...\") : null);\n    return token;\n}\n/**\n * Set session token in localStorage\n */ function setSessionToken(token) {\n    if (false) {}\n    localStorage.setItem('sessionToken', token);\n}\n/**\n * Remove session token from localStorage\n */ function removeSessionToken() {\n    if (false) {}\n    localStorage.removeItem('sessionToken');\n}\n/**\n * Get authenticated headers\n */ function getAuthHeaders() {\n    const token = getSessionToken();\n    const headers = {\n        'Content-Type': 'application/json',\n        ...token && {\n            'X-Session-Token': token\n        }\n    };\n    console.log('🔑 API Headers:', {\n        token: token ? \"\".concat(token.substring(0, 10), \"...\") : null,\n        headers\n    });\n    return headers;\n}\n/**\n * Handle API response\n */ async function handleResponse(response) {\n    if (!response.ok) {\n        const errorText = await response.text();\n        throw new Error(errorText || \"HTTP \".concat(response.status));\n    }\n    return response.json();\n}\n/**\n * User authentication\n */ const authApi = {\n    /**\n   * Register new user\n   */ register: async (username, password)=>{\n        const response = await fetch(\"\".concat(API_BASE, \"/register\"), {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                username,\n                password\n            })\n        });\n        const result = await handleResponse(response);\n        // 회원가입 성공시 토큰 저장\n        if (result.session_token) {\n            setSessionToken(result.session_token);\n        }\n        return result;\n    },\n    /**\n   * Login user\n   */ login: async (username, password)=>{\n        console.log('🔐 Login attempt:', {\n            username,\n            password: '***'\n        });\n        const response = await fetch(\"\".concat(API_BASE, \"/login\"), {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                username,\n                password\n            })\n        });\n        console.log('🔐 Login response:', {\n            status: response.status,\n            statusText: response.statusText,\n            url: response.url\n        });\n        const result = await handleResponse(response);\n        console.log('🔐 Login result:', {\n            username: result.username,\n            session_token: result.session_token ? \"\".concat(result.session_token.substring(0, 10), \"...\") : null\n        });\n        // 로그인 성공시 토큰 저장\n        if (result.session_token) {\n            console.log('💾 Saving token to localStorage');\n            setSessionToken(result.session_token);\n        } else {\n            console.error('❌ No session_token in response!');\n        }\n        return result;\n    },\n    /**\n   * Logout user\n   */ logout: async ()=>{\n        const response = await fetch(\"\".concat(API_BASE, \"/logout\"), {\n            method: 'POST',\n            headers: getAuthHeaders()\n        });\n        if (response.ok) {\n            removeSessionToken();\n        }\n    }\n};\n/**\n * Book management\n */ const bookApi = {\n    /**\n   * Get all user books\n   */ getBooks: async ()=>{\n        console.log('📚 Requesting books...');\n        const headers = getAuthHeaders();\n        const response = await fetch(\"\".concat(API_BASE, \"/books\"), {\n            headers\n        });\n        console.log('📚 Books response:', {\n            status: response.status,\n            statusText: response.statusText,\n            headers: Object.fromEntries(response.headers.entries())\n        });\n        return handleResponse(response);\n    },\n    /**\n   * Upload new book\n   */ uploadBook: async (formData)=>{\n        const token = getSessionToken();\n        const response = await fetch(\"\".concat(API_BASE, \"/books/upload\"), {\n            method: 'POST',\n            headers: {\n                ...token && {\n                    'X-Session-Token': token\n                }\n            },\n            body: formData\n        });\n        return handleResponse(response);\n    },\n    /**\n   * Get book file URL\n   */ getBookFileUrl: (bookId)=>{\n        return \"\".concat(API_BASE, \"/books/\").concat(bookId, \"/file\");\n    },\n    /**\n   * Get book download URL\n   */ getBookDownloadUrl: (bookId)=>{\n        return \"\".concat(API_BASE, \"/books/\").concat(bookId, \"/download\");\n    }\n};\n/**\n * Reading progress\n */ const progressApi = {\n    /**\n   * Get reading progress for a book\n   */ getProgress: async (bookId)=>{\n        try {\n            const response = await fetch(\"\".concat(API_BASE, \"/books/\").concat(bookId, \"/progress\"), {\n                headers: getAuthHeaders()\n            });\n            if (response.status === 404) return null;\n            return handleResponse(response);\n        } catch (error) {\n            console.error('Error getting progress:', error);\n            return null;\n        }\n    },\n    /**\n   * Update reading progress for a book\n   */ updateProgress: async (bookId, progress)=>{\n        const response = await fetch(\"\".concat(API_BASE, \"/books/\").concat(bookId, \"/progress\"), {\n            method: 'PUT',\n            headers: getAuthHeaders(),\n            body: JSON.stringify({\n                ...progress,\n                updated_at: new Date().toISOString()\n            })\n        });\n        return handleResponse(response);\n    }\n};\n/**\n * Health check\n */ const healthApi = {\n    check: async ()=>{\n        const response = await fetch(\"\".concat(API_BASE, \"/health\"));\n        return handleResponse(response);\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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Q25CLE9BQU8sR0FBcUJBLE9BQWxCOUMsVUFBUyxXQUFnQixPQUFQOEMsUUFBTztJQUNyQztBQUNGLEVBQUU7QUFFRjs7Q0FFQyxHQUNNLE1BQU1FLGNBQWM7SUFDekI7O0dBRUMsR0FDREMsYUFBYSxPQUFPSDtRQUNsQixJQUFJO1lBQ0YsTUFBTS9CLFdBQVcsTUFBTVcsTUFBTSxHQUFxQm9CLE9BQWxCOUMsVUFBUyxXQUFnQixPQUFQOEMsUUFBTyxjQUFZO2dCQUNuRWpDLFNBQVNEO1lBQ1g7WUFDQSxJQUFJRyxTQUFTSyxNQUFNLEtBQUssS0FBSyxPQUFPO1lBQ3BDLE9BQU9OLGVBQWdDQztRQUN6QyxFQUFFLE9BQU9xQixPQUFPO1lBQ2RsQyxRQUFRa0MsS0FBSyxDQUFDLDJCQUEyQkE7WUFDekMsT0FBTztRQUNUO0lBQ0Y7SUFFQTs7R0FFQyxHQUNEYyxnQkFBZ0IsT0FDZEosUUFDQUs7UUFFQSxNQUFNcEMsV0FBVyxNQUFNVyxNQUFNLEdBQXFCb0IsT0FBbEI5QyxVQUFTLFdBQWdCLE9BQVA4QyxRQUFPLGNBQVk7WUFDbkVuQixRQUFRO1lBQ1JkLFNBQVNEO1lBQ1RnQixNQUFNQyxLQUFLQyxTQUFTLENBQUM7Z0JBQ25CLEdBQUdxQixRQUFRO2dCQUNYQyxZQUFZLElBQUlDLE9BQU9DLFdBQVc7WUFDcEM7UUFDRjtRQUNBLE9BQU94QyxlQUFxQkM7SUFDOUI7QUFDRixFQUFFO0FBRUY7O0NBRUMsR0FDTSxNQUFNd0MsWUFBWTtJQUN2QkMsT0FBTztRQUNMLE1BQU16QyxXQUFXLE1BQU1XLE1BQU0sR0FBWSxPQUFUMUIsVUFBUztRQUN6QyxPQUFPYyxlQUFtQ0M7SUFDNUM7QUFDRixFQUFFIiwic291cmNlcyI6WyIvaG9tZS9jaG9paGFyYW0vd29ya3MvYXBwZGV2L215TGlicmFyeS9mcm9udGVuZC9zcmMvbGliL2FwaS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBmaWxlIGxpYi9hcGkudHNcbiAqIEBicmllZiBBUEkgY29tbXVuaWNhdGlvbiB1dGlsaXRpZXMgZm9yIE15TGlicmFyeSBmcm9udGVuZFxuICogQGF1dGhvciBNeUxpYnJhcnkgVGVhbVxuICogQHZlcnNpb24gMC4xLjBcbiAqIEBkYXRlIDIwMjUtMDgtMjZcbiAqL1xuXG5pbXBvcnQgeyBCb29rLCBBdXRoUmVzcG9uc2UsIFJlYWRpbmdQcm9ncmVzcywgQXBpUmVzcG9uc2UgfSBmcm9tICdAL3R5cGVzJztcblxuY29uc3QgQVBJX0JBU0UgPSAnaHR0cDovL2xvY2FsaG9zdDo4MDgwL2FwaSc7XG5cbi8qKlxuICogR2V0IHNlc3Npb24gdG9rZW4gZnJvbSBsb2NhbFN0b3JhZ2VcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldFNlc3Npb25Ub2tlbigpOiBzdHJpbmcgfCBudWxsIHtcbiAgaWYgKHR5cGVvZiB3aW5kb3cgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgY29uc29sZS5sb2coJ/CflJEgZ2V0U2Vzc2lvblRva2VuOiB3aW5kb3cgdW5kZWZpbmVkIChTU1IpJyk7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cbiAgXG4gIGNvbnN0IHRva2VuID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3Nlc3Npb25Ub2tlbicpO1xuICBjb25zb2xlLmxvZygn8J+UkSBnZXRTZXNzaW9uVG9rZW46JywgdG9rZW4gPyBgJHt0b2tlbi5zdWJzdHJpbmcoMCwgMTApfS4uLmAgOiBudWxsKTtcbiAgcmV0dXJuIHRva2VuO1xufVxuXG4vKipcbiAqIFNldCBzZXNzaW9uIHRva2VuIGluIGxvY2FsU3RvcmFnZVxuICovXG5leHBvcnQgZnVuY3Rpb24gc2V0U2Vzc2lvblRva2VuKHRva2VuOiBzdHJpbmcpOiB2b2lkIHtcbiAgaWYgKHR5cGVvZiB3aW5kb3cgPT09ICd1bmRlZmluZWQnKSByZXR1cm47XG4gIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCdzZXNzaW9uVG9rZW4nLCB0b2tlbik7XG59XG5cbi8qKlxuICogUmVtb3ZlIHNlc3Npb24gdG9rZW4gZnJvbSBsb2NhbFN0b3JhZ2VcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHJlbW92ZVNlc3Npb25Ub2tlbigpOiB2b2lkIHtcbiAgaWYgKHR5cGVvZiB3aW5kb3cgPT09ICd1bmRlZmluZWQnKSByZXR1cm47XG4gIGxvY2FsU3RvcmFnZS5yZW1vdmVJdGVtKCdzZXNzaW9uVG9rZW4nKTtcbn1cblxuLyoqXG4gKiBHZXQgYXV0aGVudGljYXRlZCBoZWFkZXJzXG4gKi9cbmZ1bmN0aW9uIGdldEF1dGhIZWFkZXJzKCk6IEhlYWRlcnNJbml0IHtcbiAgY29uc3QgdG9rZW4gPSBnZXRTZXNzaW9uVG9rZW4oKTtcbiAgY29uc3QgaGVhZGVycyA9IHtcbiAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxuICAgIC4uLih0b2tlbiAmJiB7ICdYLVNlc3Npb24tVG9rZW4nOiB0b2tlbiB9KSxcbiAgfTtcbiAgXG4gIGNvbnNvbGUubG9nKCfwn5SRIEFQSSBIZWFkZXJzOicsIHsgXG4gICAgdG9rZW46IHRva2VuID8gYCR7dG9rZW4uc3Vic3RyaW5nKDAsIDEwKX0uLi5gIDogbnVsbCxcbiAgICBoZWFkZXJzIFxuICB9KTtcbiAgXG4gIHJldHVybiBoZWFkZXJzO1xufVxuXG4vKipcbiAqIEhhbmRsZSBBUEkgcmVzcG9uc2VcbiAqL1xuYXN5bmMgZnVuY3Rpb24gaGFuZGxlUmVzcG9uc2U8VD4ocmVzcG9uc2U6IFJlc3BvbnNlKTogUHJvbWlzZTxUPiB7XG4gIGlmICghcmVzcG9uc2Uub2spIHtcbiAgICBjb25zdCBlcnJvclRleHQgPSBhd2FpdCByZXNwb25zZS50ZXh0KCk7XG4gICAgdGhyb3cgbmV3IEVycm9yKGVycm9yVGV4dCB8fCBgSFRUUCAke3Jlc3BvbnNlLnN0YXR1c31gKTtcbiAgfVxuICByZXR1cm4gcmVzcG9uc2UuanNvbigpO1xufVxuXG4vKipcbiAqIFVzZXIgYXV0aGVudGljYXRpb25cbiAqL1xuZXhwb3J0IGNvbnN0IGF1dGhBcGkgPSB7XG4gIC8qKlxuICAgKiBSZWdpc3RlciBuZXcgdXNlclxuICAgKi9cbiAgcmVnaXN0ZXI6IGFzeW5jICh1c2VybmFtZTogc3RyaW5nLCBwYXNzd29yZDogc3RyaW5nKTogUHJvbWlzZTxBdXRoUmVzcG9uc2U+ID0+IHtcbiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKGAke0FQSV9CQVNFfS9yZWdpc3RlcmAsIHtcbiAgICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgICAgaGVhZGVyczogeyAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nIH0sXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7IHVzZXJuYW1lLCBwYXNzd29yZCB9KSxcbiAgICB9KTtcbiAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBoYW5kbGVSZXNwb25zZTxBdXRoUmVzcG9uc2U+KHJlc3BvbnNlKTtcbiAgICBcbiAgICAvLyDtmozsm5DqsIDsnoUg7ISx6rO17IucIO2GoO2BsCDsoIDsnqVcbiAgICBpZiAocmVzdWx0LnNlc3Npb25fdG9rZW4pIHtcbiAgICAgIHNldFNlc3Npb25Ub2tlbihyZXN1bHQuc2Vzc2lvbl90b2tlbik7XG4gICAgfVxuICAgIFxuICAgIHJldHVybiByZXN1bHQ7XG4gIH0sXG5cbiAgLyoqXG4gICAqIExvZ2luIHVzZXJcbiAgICovXG4gIGxvZ2luOiBhc3luYyAodXNlcm5hbWU6IHN0cmluZywgcGFzc3dvcmQ6IHN0cmluZyk6IFByb21pc2U8QXV0aFJlc3BvbnNlPiA9PiB7XG4gICAgY29uc29sZS5sb2coJ/CflJAgTG9naW4gYXR0ZW1wdDonLCB7IHVzZXJuYW1lLCBwYXNzd29yZDogJyoqKicgfSk7XG4gICAgXG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChgJHtBUElfQkFTRX0vbG9naW5gLCB7XG4gICAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICAgIGhlYWRlcnM6IHsgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyB9LFxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoeyB1c2VybmFtZSwgcGFzc3dvcmQgfSksXG4gICAgfSk7XG4gICAgXG4gICAgY29uc29sZS5sb2coJ/CflJAgTG9naW4gcmVzcG9uc2U6Jywge1xuICAgICAgc3RhdHVzOiByZXNwb25zZS5zdGF0dXMsXG4gICAgICBzdGF0dXNUZXh0OiByZXNwb25zZS5zdGF0dXNUZXh0LFxuICAgICAgdXJsOiByZXNwb25zZS51cmxcbiAgICB9KTtcbiAgICBcbiAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBoYW5kbGVSZXNwb25zZTxBdXRoUmVzcG9uc2U+KHJlc3BvbnNlKTtcbiAgICBjb25zb2xlLmxvZygn8J+UkCBMb2dpbiByZXN1bHQ6JywgeyBcbiAgICAgIHVzZXJuYW1lOiByZXN1bHQudXNlcm5hbWUsXG4gICAgICBzZXNzaW9uX3Rva2VuOiByZXN1bHQuc2Vzc2lvbl90b2tlbiA/IGAke3Jlc3VsdC5zZXNzaW9uX3Rva2VuLnN1YnN0cmluZygwLCAxMCl9Li4uYCA6IG51bGxcbiAgICB9KTtcbiAgICBcbiAgICAvLyDroZzqt7jsnbgg7ISx6rO17IucIO2GoO2BsCDsoIDsnqVcbiAgICBpZiAocmVzdWx0LnNlc3Npb25fdG9rZW4pIHtcbiAgICAgIGNvbnNvbGUubG9nKCfwn5K+IFNhdmluZyB0b2tlbiB0byBsb2NhbFN0b3JhZ2UnKTtcbiAgICAgIHNldFNlc3Npb25Ub2tlbihyZXN1bHQuc2Vzc2lvbl90b2tlbik7XG4gICAgfSBlbHNlIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ+KdjCBObyBzZXNzaW9uX3Rva2VuIGluIHJlc3BvbnNlIScpO1xuICAgIH1cbiAgICBcbiAgICByZXR1cm4gcmVzdWx0O1xuICB9LFxuXG4gIC8qKlxuICAgKiBMb2dvdXQgdXNlclxuICAgKi9cbiAgbG9nb3V0OiBhc3luYyAoKTogUHJvbWlzZTx2b2lkPiA9PiB7XG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChgJHtBUElfQkFTRX0vbG9nb3V0YCwge1xuICAgICAgbWV0aG9kOiAnUE9TVCcsXG4gICAgICBoZWFkZXJzOiBnZXRBdXRoSGVhZGVycygpLFxuICAgIH0pO1xuICAgIGlmIChyZXNwb25zZS5vaykge1xuICAgICAgcmVtb3ZlU2Vzc2lvblRva2VuKCk7XG4gICAgfVxuICB9LFxufTtcblxuLyoqXG4gKiBCb29rIG1hbmFnZW1lbnRcbiAqL1xuZXhwb3J0IGNvbnN0IGJvb2tBcGkgPSB7XG4gIC8qKlxuICAgKiBHZXQgYWxsIHVzZXIgYm9va3NcbiAgICovXG4gIGdldEJvb2tzOiBhc3luYyAoKTogUHJvbWlzZTxCb29rW10+ID0+IHtcbiAgICBjb25zb2xlLmxvZygn8J+TmiBSZXF1ZXN0aW5nIGJvb2tzLi4uJyk7XG4gICAgY29uc3QgaGVhZGVycyA9IGdldEF1dGhIZWFkZXJzKCk7XG4gICAgXG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChgJHtBUElfQkFTRX0vYm9va3NgLCB7XG4gICAgICBoZWFkZXJzLFxuICAgIH0pO1xuICAgIFxuICAgIGNvbnNvbGUubG9nKCfwn5OaIEJvb2tzIHJlc3BvbnNlOicsIHtcbiAgICAgIHN0YXR1czogcmVzcG9uc2Uuc3RhdHVzLFxuICAgICAgc3RhdHVzVGV4dDogcmVzcG9uc2Uuc3RhdHVzVGV4dCxcbiAgICAgIGhlYWRlcnM6IE9iamVjdC5mcm9tRW50cmllcyhyZXNwb25zZS5oZWFkZXJzLmVudHJpZXMoKSlcbiAgICB9KTtcbiAgICBcbiAgICByZXR1cm4gaGFuZGxlUmVzcG9uc2U8Qm9va1tdPihyZXNwb25zZSk7XG4gIH0sXG5cbiAgLyoqXG4gICAqIFVwbG9hZCBuZXcgYm9va1xuICAgKi9cbiAgdXBsb2FkQm9vazogYXN5bmMgKGZvcm1EYXRhOiBGb3JtRGF0YSk6IFByb21pc2U8Qm9vaz4gPT4ge1xuICAgIGNvbnN0IHRva2VuID0gZ2V0U2Vzc2lvblRva2VuKCk7XG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChgJHtBUElfQkFTRX0vYm9va3MvdXBsb2FkYCwge1xuICAgICAgbWV0aG9kOiAnUE9TVCcsXG4gICAgICBoZWFkZXJzOiB7XG4gICAgICAgIC4uLih0b2tlbiAmJiB7ICdYLVNlc3Npb24tVG9rZW4nOiB0b2tlbiB9KSxcbiAgICAgIH0sXG4gICAgICBib2R5OiBmb3JtRGF0YSxcbiAgICB9KTtcbiAgICByZXR1cm4gaGFuZGxlUmVzcG9uc2U8Qm9vaz4ocmVzcG9uc2UpO1xuICB9LFxuXG4gIC8qKlxuICAgKiBHZXQgYm9vayBmaWxlIFVSTFxuICAgKi9cbiAgZ2V0Qm9va0ZpbGVVcmw6IChib29rSWQ6IG51bWJlcik6IHN0cmluZyA9PiB7XG4gICAgcmV0dXJuIGAke0FQSV9CQVNFfS9ib29rcy8ke2Jvb2tJZH0vZmlsZWA7XG4gIH0sXG5cbiAgLyoqXG4gICAqIEdldCBib29rIGRvd25sb2FkIFVSTFxuICAgKi9cbiAgZ2V0Qm9va0Rvd25sb2FkVXJsOiAoYm9va0lkOiBudW1iZXIpOiBzdHJpbmcgPT4ge1xuICAgIHJldHVybiBgJHtBUElfQkFTRX0vYm9va3MvJHtib29rSWR9L2Rvd25sb2FkYDtcbiAgfSxcbn07XG5cbi8qKlxuICogUmVhZGluZyBwcm9ncmVzc1xuICovXG5leHBvcnQgY29uc3QgcHJvZ3Jlc3NBcGkgPSB7XG4gIC8qKlxuICAgKiBHZXQgcmVhZGluZyBwcm9ncmVzcyBmb3IgYSBib29rXG4gICAqL1xuICBnZXRQcm9ncmVzczogYXN5bmMgKGJvb2tJZDogbnVtYmVyKTogUHJvbWlzZTxSZWFkaW5nUHJvZ3Jlc3MgfCBudWxsPiA9PiB7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goYCR7QVBJX0JBU0V9L2Jvb2tzLyR7Ym9va0lkfS9wcm9ncmVzc2AsIHtcbiAgICAgICAgaGVhZGVyczogZ2V0QXV0aEhlYWRlcnMoKSxcbiAgICAgIH0pO1xuICAgICAgaWYgKHJlc3BvbnNlLnN0YXR1cyA9PT0gNDA0KSByZXR1cm4gbnVsbDtcbiAgICAgIHJldHVybiBoYW5kbGVSZXNwb25zZTxSZWFkaW5nUHJvZ3Jlc3M+KHJlc3BvbnNlKTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgZ2V0dGluZyBwcm9ncmVzczonLCBlcnJvcik7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gIH0sXG5cbiAgLyoqXG4gICAqIFVwZGF0ZSByZWFkaW5nIHByb2dyZXNzIGZvciBhIGJvb2tcbiAgICovXG4gIHVwZGF0ZVByb2dyZXNzOiBhc3luYyAoXG4gICAgYm9va0lkOiBudW1iZXIsIFxuICAgIHByb2dyZXNzOiBQYXJ0aWFsPFJlYWRpbmdQcm9ncmVzcz5cbiAgKTogUHJvbWlzZTx2b2lkPiA9PiB7XG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChgJHtBUElfQkFTRX0vYm9va3MvJHtib29rSWR9L3Byb2dyZXNzYCwge1xuICAgICAgbWV0aG9kOiAnUFVUJyxcbiAgICAgIGhlYWRlcnM6IGdldEF1dGhIZWFkZXJzKCksXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgIC4uLnByb2dyZXNzLFxuICAgICAgICB1cGRhdGVkX2F0OiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCksXG4gICAgICB9KSxcbiAgICB9KTtcbiAgICByZXR1cm4gaGFuZGxlUmVzcG9uc2U8dm9pZD4ocmVzcG9uc2UpO1xuICB9LFxufTtcblxuLyoqXG4gKiBIZWFsdGggY2hlY2tcbiAqL1xuZXhwb3J0IGNvbnN0IGhlYWx0aEFwaSA9IHtcbiAgY2hlY2s6IGFzeW5jICgpOiBQcm9taXNlPHsgc3RhdHVzOiBzdHJpbmcgfT4gPT4ge1xuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goYCR7QVBJX0JBU0V9L2hlYWx0aGApO1xuICAgIHJldHVybiBoYW5kbGVSZXNwb25zZTx7IHN0YXR1czogc3RyaW5nIH0+KHJlc3BvbnNlKTtcbiAgfSxcbn07XG4iXSwibmFtZXMiOlsiQVBJX0JBU0UiLCJnZXRTZXNzaW9uVG9rZW4iLCJjb25zb2xlIiwibG9nIiwidG9rZW4iLCJsb2NhbFN0b3JhZ2UiLCJnZXRJdGVtIiwic3Vic3RyaW5nIiwic2V0U2Vzc2lvblRva2VuIiwic2V0SXRlbSIsInJlbW92ZVNlc3Npb25Ub2tlbiIsInJlbW92ZUl0ZW0iLCJnZXRBdXRoSGVhZGVycyIsImhlYWRlcnMiLCJoYW5kbGVSZXNwb25zZSIsInJlc3BvbnNlIiwib2siLCJlcnJvclRleHQiLCJ0ZXh0IiwiRXJyb3IiLCJzdGF0dXMiLCJqc29uIiwiYXV0aEFwaSIsInJlZ2lzdGVyIiwidXNlcm5hbWUiLCJwYXNzd29yZCIsImZldGNoIiwibWV0aG9kIiwiYm9keSIsIkpTT04iLCJzdHJpbmdpZnkiLCJyZXN1bHQiLCJzZXNzaW9uX3Rva2VuIiwibG9naW4iLCJzdGF0dXNUZXh0IiwidXJsIiwiZXJyb3IiLCJsb2dvdXQiLCJib29rQXBpIiwiZ2V0Qm9va3MiLCJPYmplY3QiLCJmcm9tRW50cmllcyIsImVudHJpZXMiLCJ1cGxvYWRCb29rIiwiZm9ybURhdGEiLCJnZXRCb29rRmlsZVVybCIsImJvb2tJZCIsImdldEJvb2tEb3dubG9hZFVybCIsInByb2dyZXNzQXBpIiwiZ2V0UHJvZ3Jlc3MiLCJ1cGRhdGVQcm9ncmVzcyIsInByb2dyZXNzIiwidXBkYXRlZF9hdCIsIkRhdGUiLCJ0b0lTT1N0cmluZyIsImhlYWx0aEFwaSIsImNoZWNrIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/api.ts\n"));

/***/ })

});